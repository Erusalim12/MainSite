@using MainSite.Extensions
@using MainSite.ViewModels.News
@model MainSite.ViewModels.News.NewsListViewModel
@{
    ViewData["Title"] = "Новости";
    ViewData["categoryId"] = Model.CategoryId;
}

@if (String.IsNullOrWhiteSpace(Model.CategoryId))
{
    @Html.Partial("BirthdayUsers")
}

<div id="newsComponent">
    @Html.Partial("Create", new NewsItemViewModel())
    <div class="card-panel row">
        @foreach (var item in Model.News)
        {
            var TypeMessage = item.IsMessage ? "сообщение" : "докумен";

            <div class="card_news">
                <div class="card_news-image"><img src="@Url.Content(@item.UrlIcon)" alt="" /></div>
                <div class="col m11 s10 card_news-main">
                    <div class="col m12 s10">
                        <div class="card_news-main-header">
                            <span class="bold">@item.Author</span> разместил @TypeMessage в разделе <a href="@Url.Action("Index", "Home", new {page = 0, category = item.Category})">@item.Category</a>
                        </div>

                        <div class="card_news-main-title">
                            <a class="card_news-main-title truncate" href="@Url.Action("Details", new { id = item.Id })">@item.Header</a>
                        </div>
                        <div class="card_news-main-footer">@item.CreatedDate</div>
                    </div>
                </div>
                <div class="card_news-editor">
                    <a href="@Url.Action("edit")"><i class="material-icons">edit</i></a>
                    <a href="#" class="error"><i class="material-icons">close</i></a>
                </div>
            </div>
        }
    </div>
</div>

@{
    var pager = Html.Pager(Model.PagerModel);
    if (!string.IsNullOrEmpty(pager.RenderHtmlContent()))
    {
        <div class="card-panel row">
            @pager
        </div>
    }
}

<script type="text/javascript">
    var vm = new Vue({
        el: '#newsComponent',
        data: {
            classObject: {
                'active': false,
                'desActive': false
            }
        },
        methods: {
            showCreator: function (active, desActive) {
                this.classObject['active'] = active;
                this.classObject['desActive'] = desActive;
            }
        }
    });
</script>
