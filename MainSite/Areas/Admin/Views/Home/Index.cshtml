@{
    Layout = "_Layout";
}

<div class="card card-panel col s12 m4 l3">
    <div class="card-content">
        <span class="card-title activator grey-text text-darken-4">
            Меню
        </span>
        <p> @Html.ActionLink("Добавить пункт меню", "Create", "Menu")</p>
        <p>@Html.ActionLink("Редактирование иерархии меню", "Index", "Menu")</p>
    </div>
</div>
<div class="card card-panel col s12 m4 l3">
    <div class="card-content">
        <span class="card-title activator grey-text text-darken-4">
            Роли
        </span>
        <p> @Html.ActionLink("Роли пользователей", "Index", "UserRole")</p>
        <p> @Html.ActionLink("Список пользователей", "Index", "Users")</p>
        @*<p> @Html.ActionLink("Настройки прав для ролей", "Permissions", "Security")</p>*@
        <hr />
        <p> @Html.ActionLink("Установка ролей *", "InstallPermissions", "Security")</p>
    </div>
</div>
<div class="card card-panel col s12 m4 l3">
    <div class="card-content">
        <span class="card-title activator grey-text text-darken-4">
            Параметры приложения
        </span>
        <p>@Html.ActionLink("Перейти", "Index", "Settings")</p>
        <hr />
        <p>@Html.ActionLink("Спарсить план календарь", "IndexPlanCalendar", "Parser")</p>
        <p>@Html.ActionLink("Спарсить дни рождения", "IndexBirthday", "Parser")</p>
    </div>
</div>

<div class="card card-panel col s12 m4 l3">
    <div class="card-content">
        <span class="card-title activator grey-text text-darken-4">
            Внешние ресурсы
        </span>
        <p> @Html.ActionLink("Добавить ресурс", "Create", "ExternalLinks")</p>
        <p> @Html.ActionLink("Перейти к списку", "Index", "ExternalLinks")</p>
    </div>
</div>

<div class="card card-panel col s12 m4 l3">
    <div class="card-content">
        <span class="card-title activator grey-text text-darken-4">
            Статистика
        </span>
        <p>
            <a class="dropdown-trigger" data-target='dropdown1'>Статистика пользователей</a>
            <div id='dropdown1' class='dropdown-content' style="max-height:400px;overflow-x:hidden;">
                @await Component.InvokeAsync("CounterComponent")
            </div>
        </p>
        <p>
            <a class="dropdown-trigger" data-target='dropdown2'>Статистика по дням</a>
            <div id='dropdown2' class='dropdown-content' style="max-height: 400px;overflow-x: hidden;">
                @await Component.InvokeAsync("DailyStaticsComponent")
            </div>
        </p>
        <p>
            <a class="dropdown-trigger" data-target='dropdown3'>Статистика сообщений</a>
            <div id='dropdown3' class='dropdown-content' style="max-height: 400px;overflow-x: hidden;">
                @await Component.InvokeAsync("NewsGenerationStatisticsComponent")
            </div>
        </p>
    </div>
</div>
@*@await Component.InvokeAsync("CounterComponent")
    @await Component.InvokeAsync("DailyStaticsComponent")

    @await Component.InvokeAsync("NewsGenerationStatisticsComponent")
*@


<script>
    document.addEventListener('DOMContentLoaded', function () {
        var elems = document.querySelectorAll('.dropdown-trigger');
        var instances = M.Dropdown.init(elems, {});
    });

    var allElements = document.querySelectorAll('#mainBlock > div');
    var maxHeight = allElements[0].offsetHeight;

    for (var i = 0; i < allElements.length; i++) {
        if (allElements[i].offsetHeight > maxHeight) maxHeight = allElements[i].offsetHeight;
    }

    for (var i = 0; i < allElements.length; i++) {
        allElements[i].style.height = maxHeight + 'px';
    }
</script>